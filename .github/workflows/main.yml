name: Build iOS App

on:
  push:
    branches:
      - main

jobs:
  build-ios:
    runs-on: macos-latest

    steps:
      # 1) Set up Python 3.10
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # 2) Checkout repository code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 3) Install system dependencies and configure Git
      - name: Install system dependencies
        run: |
          brew update
          brew install git autoconf automake libtool pkg-config ios-deploy
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      # 4) Create a virtual environment and install Buildozer & Cython
      - name: Create venv & install Buildozer
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install buildozer cython

      # 5) Manually clone the pbxproj module (now mod-pbxproj) and install it
      - name: Manually clone pbxproj
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          source venv/bin/activate
          git clone https://$GITHUB_ACTOR:${GH_TOKEN}@github.com/kronenthaler/mod-pbxproj.git pbxproj_src
          pip install ./pbxproj_src

      # 6) Prepare Buildozer by initializing the spec and setting iOS parameters
      - name: Prepare Buildozer
        run: |
          source venv/bin/activate
          buildozer init
          # Change target from android to ios
          sed -i '' 's/android/ios/' buildozer.spec
          sed -i '' 's/# requirements = python3,kivy/requirements = python3,kivy/' buildozer.spec
          echo "ios.kivy_ios_deps = ios-deploy" >> buildozer.spec
          echo "ios.kivy_ios_reqs = ios-deploy" >> buildozer.spec
          sed -i '' 's/# ios.codesign.force = False/ios.codesign.force = True/' buildozer.spec
          sed -i '' 's/# ios.codesign.debug = True/ios.codesign.debug = False/' buildozer.spec
          echo "ios.xcodebuild.env = ONLY_ACTIVE_ARCH=YES" >> buildozer.spec

      # 7) Patch the ios-deploy Xcode project to remove macOS and x86_64 references
      - name: Patch ios-deploy project for iOS-only build
        run: |
          source venv/bin/activate
          # First, update ios-deploy dependencies
          buildozer ios update
          cd .buildozer/ios/platform/ios-deploy/ios-deploy.xcodeproj
          # Change deployment target from macOS to a supported iOS target (e.g., 14.0)
          sed -i '' 's/MACOSX_DEPLOYMENT_TARGET = 10\.8;/IPHONEOS_DEPLOYMENT_TARGET = 14.0;/g' project.pbxproj
          sed -i '' 's/MACOSX_DEPLOYMENT_TARGET = 10\.11;/IPHONEOS_DEPLOYMENT_TARGET = 14.0;/g' project.pbxproj
          # Remove lines referencing x86_64 to avoid building that slice
          sed -i '' '/x86_64/d' project.pbxproj
          # Remove any linking flag for libarclite_macosx.a if present
          sed -i '' 's/-l:libarclite_macosx.a//g' project.pbxproj
          cd -
      
      # 8) Build the .ipa file with verbose logging
      - name: Build .ipa File
        run: |
          source venv/bin/activate
          buildozer --log-level=2 -v ios debug

      # 9) Upload the generated .ipa artifact
      - name: Upload .ipa
        uses: actions/upload-artifact@v4
        with:
          name: ToDoApp.ipa
          path: bin/
